<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Test extends CI_Controller {

	function __construct() {
		parent::__construct();
		$this->load->helper('jwt_helper');
    }

	/**
	 * Index Page for this controller.
	 *
	 * Maps to the following URL
	 * 		http://example.com/index.php/welcome
	 *	- or -
	 * 		http://example.com/index.php/welcome/index
	 *	- or -
	 * Since this controller is set as the default controller in
	 * config/routes.php, it's displayed at http://example.com/
	 *
	 * So any other public methods not prefixed with an underscore will
	 * map to /index.php/welcome/<method_name>
	 * @see https://codeigniter.com/user_guide/general/urls.html
	 */
	public function index()
	{
		$this->load->view('welcome_message');
	}

	public function email(){
		
		$htmldata = '<p>Test Mail</p>';		
				
		$mail = array(
			'email' => 'rahul.tiwari@pixelnx.com',
			'subject' => 'Reset Password of Push Buttons'
		);
		$data = array(
			'host' => 'business89.web-hosting.com',
			'port' => '25',
			'username' => 'support@pushbutton-vip.com',
			'password' => ';i^%+&G1!E#V',
			'encryption' => 'TLS',
			'from_email' => FROMMAIL,
			'from_name' => FROMNAME
		);
		$r = send_mail_smtp( $htmldata, $mail, array(), $data, array() );
		print_r($r);
	}

	public function schedule_broadcast(){
		
	}

	public function op(){
		$to = "imajayt@gmail.com";
		$subject = "This is subject";
		
		$message = "<b>This is HTML message.</b>";
		$message .= "<h1>This is headline.</h1>";
		
		$header = "From:".FROMMAIL." \r\n";
		$header .= "MIME-Version: 1.0\r\n";
		$header .= "Content-type: text/html\r\n";
		
		$retval = mail ($to,$subject,$message,$header);
		
		if( $retval == true ) {
			echo "Message sent successfully...";
		}else {
			echo "Message could not be sent...";
		}
	}
	
	public function addautomailchimp(){

		// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
		$ch = curl_init();

		curl_setopt($ch, CURLOPT_URL, 'https://us13.api.mailchimp.com/3.0/automations');
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		curl_setopt($ch, CURLOPT_POST, 1);
		curl_setopt($ch, CURLOPT_POSTFIELDS, "{\"recipients\":{\"list_id\":\"129285\"},\"settings\":{\"from_name\":\"Rahul Tiwari\",\"reply_to\":\"rahul.tiwari@himanshusofttech.com\"},\"trigger_settings\":{\"workflow_type\":\"welcomeSeries\"}}");

		$headers = array();
		$headers[] = 'Authorization: Basic 6ece7f74e6c1d725f2fd6a582d58ee0f-us13';
		$headers[] = 'Content-Type: application/x-www-form-urlencoded';
		curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

		$result = curl_exec($ch);
		if (curl_errno($ch)) {
			echo 'Error:' . curl_error($ch);
		}
		curl_close($ch);
		print_r($result);
		die();
	   require_once  FCPATH . 'application/helpers/MailchimpMarketing/vendor/autoload.php';
		
			$client = new MailchimpMarketing\ApiClient();
			$client->setConfig([
				'apiKey' => '6ece7f74e6c1d725f2fd6a582d58ee0f-us13',
				'server' => 'us13',
			]);

			die();
			try {
			 $response = $client->automations->create([
				"recipients" => ['list_id' => 129285],
				"trigger_settings" => ["workflow_type" => "abandonedCart"],
			]);
			}

			//catch exception
			catch(Exception $e) {
			  echo 'Message: ' .$e->getMessage();
			}
			
			
			
			
			//print_r($response);
		
	}

	public function getr(){
		if(in_array(10, $this->session->userdata( 'access_level' ))){
			print_r($this->session->userdata( 'access_level' ));

		}
		die();
		require_once  FCPATH . 'application/helpers/subscriber/GetResponse/GetResponseAPI3.class.php';
		$api = new GetResponse('urts8p5b2vibqen7u2qoik7t0nsv27y3');
		$data = '{
			"name": "Message 2",
			"subject": "test12",
			"status": "enabled",
			"editor": "custom",
			"content": {
			  "html": "<h1>test 12</h1><p>Some test <a href=\"http://example.com\">http://example.com</a></p>",
			  "plain": "test 12 Some test"
			},
			"flags": [
			  "openrate"
			],
			"sendSettings": {
			  "type": "signup",
			  "delayInHours": 0,
			  "sendAtHour": 0,
			  "recurrence": "false",
			  "timeTravel": "true",
			  "excludedDaysOfWeek": [
				"Monday"
			  ],
			},
			"triggerSettings": {
			  "type": "onday",
			  "dayOfCycle": 0,
			}
		}';

		$data = json_decode( $data, true );

		$r = $api->autoresponders($data);
		//$r = $api->getCampaigns();
		//$r = $api->getForms();
		print_r($r);
				
	}
	public function getarticlesTest(){
		$articles = get7article('Health and Fitness');
		echo "<pre>";
		print_r($articles);
		die;
	}
	public function subs(){
		$sub_domain = createSubdomain( 'rtestp' );
		print_r($sub_domain);
	}

	public function getar(){
		echo date_default_timezone_get();
	echo date('Y-m-d H:i:s');
	}
}
